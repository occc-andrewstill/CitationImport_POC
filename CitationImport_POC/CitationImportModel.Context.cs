//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace CitationImport_POC
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class OdyClerkInternalEntities : DbContext
    {
        public OdyClerkInternalEntities()
            : base("name=OdyClerkInternalEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<TrafficCitation_AgencyVendorInfo> TrafficCitation_AgencyVendorInfo { get; set; }
        public virtual DbSet<TrafficCitation_Import> TrafficCitation_Import { get; set; }
        public virtual DbSet<TrafficCitation_ImportFileLog> TrafficCitation_ImportFileLog { get; set; }
    
        public virtual int TrafficCitationImport_Exceptions(Nullable<int> fileLogId, string localPath, Nullable<byte> debugFlag)
        {
            var fileLogIdParameter = fileLogId.HasValue ?
                new ObjectParameter("FileLogId", fileLogId) :
                new ObjectParameter("FileLogId", typeof(int));
    
            var localPathParameter = localPath != null ?
                new ObjectParameter("LocalPath", localPath) :
                new ObjectParameter("LocalPath", typeof(string));
    
            var debugFlagParameter = debugFlag.HasValue ?
                new ObjectParameter("DebugFlag", debugFlag) :
                new ObjectParameter("DebugFlag", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TrafficCitationImport_Exceptions", fileLogIdParameter, localPathParameter, debugFlagParameter);
        }
    
        public virtual int TrafficCitationImport_Exceptions_Red(Nullable<int> fileLogId, string localPath, Nullable<byte> debugFlag)
        {
            var fileLogIdParameter = fileLogId.HasValue ?
                new ObjectParameter("FileLogId", fileLogId) :
                new ObjectParameter("FileLogId", typeof(int));
    
            var localPathParameter = localPath != null ?
                new ObjectParameter("LocalPath", localPath) :
                new ObjectParameter("LocalPath", typeof(string));
    
            var debugFlagParameter = debugFlag.HasValue ?
                new ObjectParameter("DebugFlag", debugFlag) :
                new ObjectParameter("DebugFlag", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TrafficCitationImport_Exceptions_Red", fileLogIdParameter, localPathParameter, debugFlagParameter);
        }
    
        public virtual int TrafficCitationImport_Exceptions_Toll(Nullable<int> fileLogId, string localPath, Nullable<byte> debugFlag)
        {
            var fileLogIdParameter = fileLogId.HasValue ?
                new ObjectParameter("FileLogId", fileLogId) :
                new ObjectParameter("FileLogId", typeof(int));
    
            var localPathParameter = localPath != null ?
                new ObjectParameter("LocalPath", localPath) :
                new ObjectParameter("LocalPath", typeof(string));
    
            var debugFlagParameter = debugFlag.HasValue ?
                new ObjectParameter("DebugFlag", debugFlag) :
                new ObjectParameter("DebugFlag", typeof(byte));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TrafficCitationImport_Exceptions_Toll", fileLogIdParameter, localPathParameter, debugFlagParameter);
        }
    
        public virtual int TrafficCitationImport_FixAppearByDate(Nullable<int> fileLogId)
        {
            var fileLogIdParameter = fileLogId.HasValue ?
                new ObjectParameter("FileLogId", fileLogId) :
                new ObjectParameter("FileLogId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TrafficCitationImport_FixAppearByDate", fileLogIdParameter);
        }
    
        public virtual int TrafficCitationImport_GetDirectoryFilenamesWithCreationDates(string pathName)
        {
            var pathNameParameter = pathName != null ?
                new ObjectParameter("PathName", pathName) :
                new ObjectParameter("PathName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TrafficCitationImport_GetDirectoryFilenamesWithCreationDates", pathNameParameter);
        }
    
        public virtual int TrafficCitationImport_ImportCitationFile()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TrafficCitationImport_ImportCitationFile");
        }
    
        public virtual int TrafficCitationImport_ImportCitationsToOdyssey(Nullable<int> fileLogId, Nullable<int> vendorAgencyId, string localPath)
        {
            var fileLogIdParameter = fileLogId.HasValue ?
                new ObjectParameter("FileLogId", fileLogId) :
                new ObjectParameter("FileLogId", typeof(int));
    
            var vendorAgencyIdParameter = vendorAgencyId.HasValue ?
                new ObjectParameter("VendorAgencyId", vendorAgencyId) :
                new ObjectParameter("VendorAgencyId", typeof(int));
    
            var localPathParameter = localPath != null ?
                new ObjectParameter("LocalPath", localPath) :
                new ObjectParameter("LocalPath", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TrafficCitationImport_ImportCitationsToOdyssey", fileLogIdParameter, vendorAgencyIdParameter, localPathParameter);
        }
    
        public virtual int TrafficCitationImport_LinkImages(Nullable<int> fileLogId)
        {
            var fileLogIdParameter = fileLogId.HasValue ?
                new ObjectParameter("FileLogId", fileLogId) :
                new ObjectParameter("FileLogId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TrafficCitationImport_LinkImages", fileLogIdParameter);
        }
    
        public virtual int TrafficCitationImport_MarkCitationRecordAsHasImage(string imageFromDirectory)
        {
            var imageFromDirectoryParameter = imageFromDirectory != null ?
                new ObjectParameter("ImageFromDirectory", imageFromDirectory) :
                new ObjectParameter("ImageFromDirectory", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TrafficCitationImport_MarkCitationRecordAsHasImage", imageFromDirectoryParameter);
        }
    
        public virtual int TrafficCitationImport_MarkFileCompletion(Nullable<int> fileLogId)
        {
            var fileLogIdParameter = fileLogId.HasValue ?
                new ObjectParameter("FileLogId", fileLogId) :
                new ObjectParameter("FileLogId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TrafficCitationImport_MarkFileCompletion", fileLogIdParameter);
        }
    
        public virtual int TrafficCitationImport_ProcessCitations(Nullable<int> fileLogId, string citationNumber)
        {
            var fileLogIdParameter = fileLogId.HasValue ?
                new ObjectParameter("FileLogId", fileLogId) :
                new ObjectParameter("FileLogId", typeof(int));
    
            var citationNumberParameter = citationNumber != null ?
                new ObjectParameter("CitationNumber", citationNumber) :
                new ObjectParameter("CitationNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TrafficCitationImport_ProcessCitations", fileLogIdParameter, citationNumberParameter);
        }
    
        public virtual int TrafficCitationImport_ProcessFailedCitations(string citationNumber)
        {
            var citationNumberParameter = citationNumber != null ?
                new ObjectParameter("CitationNumber", citationNumber) :
                new ObjectParameter("CitationNumber", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TrafficCitationImport_ProcessFailedCitations", citationNumberParameter);
        }
    
        public virtual int TrafficCitationImport_Processing(Nullable<int> fileLogId)
        {
            var fileLogIdParameter = fileLogId.HasValue ?
                new ObjectParameter("FileLogId", fileLogId) :
                new ObjectParameter("FileLogId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TrafficCitationImport_Processing", fileLogIdParameter);
        }
    
        public virtual int TrafficCitationImport_ReprocessSkippedFiles()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TrafficCitationImport_ReprocessSkippedFiles");
        }
    
        public virtual int TrafficCitationImport_SendFailedToQueue(Nullable<int> queFileLogId, string currExceptionFlag)
        {
            var queFileLogIdParameter = queFileLogId.HasValue ?
                new ObjectParameter("QueFileLogId", queFileLogId) :
                new ObjectParameter("QueFileLogId", typeof(int));
    
            var currExceptionFlagParameter = currExceptionFlag != null ?
                new ObjectParameter("CurrExceptionFlag", currExceptionFlag) :
                new ObjectParameter("CurrExceptionFlag", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TrafficCitationImport_SendFailedToQueue", queFileLogIdParameter, currExceptionFlagParameter);
        }
    
        public virtual int TrafficCitationImport_SendFailedToQueue_Retry()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TrafficCitationImport_SendFailedToQueue_Retry");
        }
    
        public virtual int TrafficCitationImport_SendImagesToTraffic()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("TrafficCitationImport_SendImagesToTraffic");
        }
    }
}
